var documenterSearchIndex = {"docs":
[{"location":"manual/#User-manual-1","page":"Manual","title":"User manual","text":"","category":"section"},{"location":"manual/#Importing-the-module-1","page":"Manual","title":"Importing the module","text":"","category":"section"},{"location":"manual/#","page":"Manual","title":"Manual","text":"Once you have installed Geodesics.jl, you can load the module by doing","category":"page"},{"location":"manual/#","page":"Manual","title":"Manual","text":"using Geodesics","category":"page"},{"location":"manual/#Basic-functions-1","page":"Manual","title":"Basic functions","text":"","category":"section"},{"location":"manual/#[Geodesics.forward](@ref)-1","page":"Manual","title":"Geodesics.forward","text":"","category":"section"},{"location":"manual/#","page":"Manual","title":"Manual","text":"A standard forward Vincenty computation finds the end point on a flattened sphere, given a starting location at longitude-latitude (lon,lat), a forward azimuth az and a distance dist travelled along the surface.  You also need to specify the semimajor (equatorial) radius of the ellipsoid a and the flattening f.","category":"page"},{"location":"manual/#","page":"Manual","title":"Manual","text":"Let's travel 30 km northeast of Trafalgar Square, london, and see where we end up:","category":"page"},{"location":"manual/#","page":"Manual","title":"Manual","text":"using Geodesics\nlon, lat, az, dist, a, f = deg2rad(0.1281), deg2rad(51.5080), deg2rad(45), 30_000, Geodesics.EARTH_R_MAJOR_WGS84, Geodesics.F_WGS84\nGeodesics.forward(lon, lat, az, dist, a, f)\nlon1, lat1, backazimuth = rad2deg.(ans)","category":"page"},{"location":"manual/#","page":"Manual","title":"Manual","text":"So we get to here, which is most of the way to Chelmsford in Essex.  Exciting!","category":"page"},{"location":"manual/#","page":"Manual","title":"Manual","text":"Note that here, we've use the semimajor Earth radius from the WGS84 ellipsoid, and WGS84's flattening, avaialable in the geodesics package.  If we'd assumed a perfectly spherical Earth, then we end up very slightly elsewhere.","category":"page"},{"location":"manual/#[Geodesics.inverse](@ref)-1","page":"Manual","title":"Geodesics.inverse","text":"","category":"section"},{"location":"manual/#","page":"Manual","title":"Manual","text":"A standard inverse Vincenty calculation finds the distance, azimuth and backazimuth between two known points on the ellipsoid, (lon1,lat1) and (lon2,lat2).  Again, we need to specify the semimajor radius and flattening.","category":"page"},{"location":"manual/#","page":"Manual","title":"Manual","text":"Let's see how far it is (as the crow flies) between Jarrow and Parliament:","category":"page"},{"location":"manual/#","page":"Manual","title":"Manual","text":"lon1, lat1 = -1.4951547, 54.967618; # Jarrow\nlon2, lat2 = -0.1270032, 51.4994794; # Palace of Westminster\na, f = Geodesics.EARTH_R_MAJOR_WGS84, Geodesics.F_WGS84;\ndist, az, baz = Geodesics.inverse(deg2rad.((lon1, lat1, lon2, lat2))..., a, f)","category":"page"},{"location":"manual/#","page":"Manual","title":"Manual","text":"So the Jarrow Marchers had at the very least (ignoring topography) 396 km to walk!","category":"page"},{"location":"manual/#Convenience-functions-1","page":"Manual","title":"Convenience functions","text":"","category":"section"},{"location":"manual/#","page":"Manual","title":"Manual","text":"Geodesics.jl comes with convenience functions which use angles in either degrees or radians, as you prefer.  It is also often true that you are only interested in one quantity at the time, such only wanting to find out the forward azimuth between two known points.  In this case, use Geodesics.azimuth to find which azimuth you should sail along (on a perfectly calm day) to reach St Malo from Jersey:","category":"page"},{"location":"manual/#","page":"Manual","title":"Manual","text":"lon0, lat0 = -2.117641, 49.176924; # St. Helier, Jersey\nlon1, lat1 = -2.032614, 48.641570; # St. Malo, France\nGeodesics.azimuth(lon0, lat0, lon1, lat1) # Uses degrees and WGS84 ellipsoid by default","category":"page"},{"location":"manual/#","page":"Manual","title":"Manual","text":"Note that I didn't need to specify the flattening (which defaults to that of the WGS84 ellipsoid), but this can be overridden using the f keyword argument.","category":"page"},{"location":"manual/#","page":"Manual","title":"Manual","text":"The full list of convenience functions:","category":"page"},{"location":"manual/#","page":"Manual","title":"Manual","text":"angular_distance: Find the surface distance between two points in terms of an angle measured from the centre of the ellipsoid.\nsurface_distance: The distance between two points.\nangular_step: Find the end point and backazimuth from one point when travelling a set angular distance along a defined azimuth.\nazimuth: The forward azimuth between two points.","category":"page"},{"location":"manual/#Choice-of-geodesic-calculation-1","page":"Manual","title":"Choice of geodesic calculation","text":"","category":"section"},{"location":"manual/#","page":"Manual","title":"Manual","text":"This package so far only implements Vincenty's methods, but others are available. Pull requests to add these are welcome.","category":"page"},{"location":"manual/#References-1","page":"Manual","title":"References","text":"","category":"section"},{"location":"manual/#","page":"Manual","title":"Manual","text":"Thaddeus Vincenty published the forward and inverse methods used in this package in the following paper:","category":"page"},{"location":"manual/#","page":"Manual","title":"Manual","text":"Vincenty, T. (1975). \"Direct and Inverse Solutions of Geodesics on the Ellipsoid with application of nested equations\" (PDF). Survey Review. XXIII (176): 88–93. doi:10.1179/sre.1975.23.176.88.","category":"page"},{"location":"#[Geodesics](https://github.com/anowacki/Geodesics.jl)-1","page":"Home","title":"Geodesics","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"(Image: Build Status) (Image: Test coverage)","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Calculate geodesics (great circle paths) on a flattened sphere (ellipsoid of rotation).","category":"page"},{"location":"#Install-1","page":"Home","title":"Install","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Geodesics is compatible with Julia version 1.0 upwards.  Install using:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"julia> import Pkg\n\njulia> Pkg.pkg\"add https://github.com/anowacki/Geodesics.jl\"","category":"page"},{"location":"#Contents-1","page":"Home","title":"Contents","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Acknowledgments-1","page":"Home","title":"Acknowledgments","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Adapted from the GreatCircle.jl package, which in turn is a port of pygc.","category":"page"},{"location":"function-index/#Function-index-1","page":"Function index","title":"Function index","text":"","category":"section"},{"location":"function-index/#","page":"Function index","title":"Function index","text":"This page lists the docstrings for each public function.  You can also see this information in the Julia REPL by typing ? then the name of the function.","category":"page"},{"location":"function-index/#Convenience-functions-1","page":"Function index","title":"Convenience functions","text":"","category":"section"},{"location":"function-index/#","page":"Function index","title":"Function index","text":"These functions make use of the basic functions to allow you to calculate specific quantities easily.","category":"page"},{"location":"function-index/#","page":"Function index","title":"Function index","text":"Geodesics.angular_distance\nGeodesics.surface_distance\nGeodesics.angular_step\nGeodesics.azimuth","category":"page"},{"location":"function-index/#Geodesics.angular_distance","page":"Function index","title":"Geodesics.angular_distance","text":"angular_distance(lon0, lat0, lon1, lat1, degrees=true; f=F_WGS84) -> Δ\n\nReturn the angular distance between points (lon0,lat0) and (lon1,lat1) on a flattened sphere.  The default flattening is 0.0033528106718309896.  By default, input and output are in degrees, but specify degrees as false to use radians. Use f=0 to perform computations on a sphere.\n\n\n\n\n\n","category":"function"},{"location":"function-index/#Geodesics.surface_distance","page":"Function index","title":"Geodesics.surface_distance","text":"surface_distance(lon0, lat0, lon1, lat1, a, degrees::Bool=false; f=F_WGS84)\n\nReturn the physical distance between points (lon0,lat0) and (lon1,lat1) on the flattened sphere with flattening f and semimajor radius a.  Distance is given in the same units as a.  By default, input angles are in degrees, but specify degrees as false to use radians.  Use f=0 to perform computations on a sphere.\n\n\n\n\n\n","category":"function"},{"location":"function-index/#Geodesics.angular_step","page":"Function index","title":"Geodesics.angular_step","text":"step(lon, lat, azimuth, distance, degrees=false; f=F_WGS84) -> lon′, lat′, backazimuth\n\nReturn the longitude lon′, latitude lat′ and backazimuth baz reached by travelling an angular distance along azimuth from the starting point at (lon,lat).  The default flattening is 0.0033528106718309896.  By default, input and output are in degrees, but specify degrees as false to use radians. Use f=0 to perform computations on a sphere.\n\n\n\n\n\n","category":"function"},{"location":"function-index/#Geodesics.azimuth","page":"Function index","title":"Geodesics.azimuth","text":"azimuth(lon0, lat0, lon1, lat1, degrees=true, f=F_WGS84)\n\nReturn the azimuth from point (lon0,lat0) to point (lon1,lat1) on a flattened sphere.  The default flattening is 0.0033528106718309896.  By default, input and output are in degrees, but specify degrees as false to use radians. Use f=0 to perform computations on a sphere.\n\n\n\n\n\n","category":"function"},{"location":"function-index/#Basic-functions-1","page":"Function index","title":"Basic functions","text":"","category":"section"},{"location":"function-index/#","page":"Function index","title":"Function index","text":"These functions solve the geodesic inverse or forward problems, returning all available information.","category":"page"},{"location":"function-index/#","page":"Function index","title":"Function index","text":"Geodesics.forward\nGeodesics.inverse","category":"page"},{"location":"function-index/#Geodesics.forward","page":"Function index","title":"Geodesics.forward","text":"forward(lon, lat, azimuth, distance, a, f) -> lon′, lat′, backazimuth\n\nReturn the longitude lon′ and latitude lat′ and backazimuth of a projected point, reached by travelling along an azimuth for distance from an original point at (lon, lat).  Specify the spheroid with the semimajor radius a and flattening f.\n\nCoordinates and azimuth are in radians.\n\nCalculations use Vincenty's forward formula [1].\n\nReferences\n\nVincenty, T. (1975). \"Direct and Inverse Solutions of Geodesics on the Ellipsoid with application of nested equations\" (PDF). Survey Review. XXIII (176): 88–93. doi:10.1179/sre.1975.23.176.88\n\n\n\n\n\n","category":"function"},{"location":"function-index/#Geodesics.inverse","page":"Function index","title":"Geodesics.inverse","text":"inverse(lon1, lat1, lon2, lat2, a, f) -> distance, azimuth, backazimuth\n\nReturn the distance, azimuth and backazimuth between two points with longitudes lon1 and lon2, and latitudes lat1 and lat2.  Specify the spheroid with the semimajor radius a and flattening f.\n\nCoordinates and angles are in radians, whilst distance is in the same units as a.\n\nCalculations use Vincenty's inverse formula [1].\n\nReferences\n\nVincenty, T. (1975). \"Direct and Inverse Solutions of Geodesics on the Ellipsoid with application of nested equations\" (PDF). Survey Review. XXIII (176): 88–93. doi:10.1179/sre.1975.23.176.88\n\n\n\n\n\n","category":"function"}]
}
